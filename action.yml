name: 'Find, create or update comment'
description: 'Tries to find a comment and updates it if found, if not creates it.'
branding:
  icon: 'message-square'
  color: 'gray-dark'

inputs:
  token:
    description: 'GITHUB_TOKEN or a repo scoped PAT.'
    required: true
    default: ${{ github.token }}
  repository:
    description: 'The full name of the repository containing the issue or pull request where to find, create or update the comment.'
    required: true
    default: ${{ github.repository }}
  issue-number:
    description: 'The number of the issue or pull request in which to find, create or update the comment.'
    required: true
  body-includes:
    description: 'A string to search for in the body of comments.'
    required: true
  comment-author:
    description: 'The GitHub user name of the comment author.'
    required: false
    default: ''
  body:
    description: 'The comment body.'
    required: true
  edit-mode:
    description: 'The mode when updating a comment: replace or append.'
    required: true
  reactions:
    description: 'A comma separated list of reactions to add to the comment (+1, -1, laugh, confused, heart, hooray, rocket, eyes).'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: Find Comment
      uses: peter-evans/find-comment@v2.4.0
      id: find-comment
      with:
        token: ${{ inputs.token }}
        repository: ${{ inputs.repository }}
        issue-number: ${{ inputs.issue-number }}
        body-includes: ${{ inputs.body-includes }}
        comment-author: ${{ inputs.comment-author }}
    - name: Create comment
      uses: peter-evans/create-or-update-comment@v3.1.0
      if:   steps.find-comment.outputs.comment-id == 0
      with:
        token: ${{ inputs.token }}
        repository: ${{ inputs.repository }}
        issue-number: ${{ inputs.issue-number }}
        body: ${{ inputs.body }}
        reactions: ${{ inputs.reactions }}
    - name: Update comment
      uses: peter-evans/create-or-update-comment@v3.1.0
      if:   steps.find-comment.outputs.comment-id != 0
      with:
        token: ${{ inputs.token }}
        repository: ${{ inputs.repository }}
        comment-id: ${{ steps.find-comment.outputs.comment-id }}
        edit-mode: ${{ inputs.edit-mode }}
        body: ${{ inputs.body }}
        reactions: ${{ inputs.reactions }}
